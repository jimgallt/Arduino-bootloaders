
optiboot_atmega328.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001dc  00007e00  00007e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b34  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000a73  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00007e00 <main>:
    7e00:	11 24       	eor	r1, r1
    7e02:	85 e0       	ldi	r24, 0x05	; 5
    7e04:	80 93 81 00 	sts	0x0081, r24
    7e08:	82 e0       	ldi	r24, 0x02	; 2
    7e0a:	80 93 c0 00 	sts	0x00C0, r24
    7e0e:	88 e1       	ldi	r24, 0x18	; 24
    7e10:	80 93 c1 00 	sts	0x00C1, r24
    7e14:	86 e0       	ldi	r24, 0x06	; 6
    7e16:	80 93 c2 00 	sts	0x00C2, r24
    7e1a:	80 e1       	ldi	r24, 0x10	; 16
    7e1c:	80 93 c4 00 	sts	0x00C4, r24
    7e20:	84 b7       	in	r24, 0x34	; 52
    7e22:	14 be       	out	0x34, r1	; 52
    7e24:	81 ff       	sbrs	r24, 1
    7e26:	c7 d0       	rcall	.+398    	; 0x7fb6 <appStart>
    7e28:	8e e0       	ldi	r24, 0x0E	; 14
    7e2a:	bf d0       	rcall	.+382    	; 0x7faa <watchdogConfig>
    7e2c:	25 9a       	sbi	0x04, 5	; 4
    7e2e:	86 e0       	ldi	r24, 0x06	; 6
    7e30:	20 e3       	ldi	r18, 0x30	; 48
    7e32:	3c ef       	ldi	r19, 0xFC	; 252
    7e34:	91 e0       	ldi	r25, 0x01	; 1
    7e36:	30 93 85 00 	sts	0x0085, r19
    7e3a:	20 93 84 00 	sts	0x0084, r18
    7e3e:	96 bb       	out	0x16, r25	; 22
    7e40:	b0 9b       	sbis	0x16, 0	; 22
    7e42:	fe cf       	rjmp	.-4      	; 0x7e40 <main+0x40>
    7e44:	1d 9a       	sbi	0x03, 5	; 3
    7e46:	a8 95       	wdr
    7e48:	81 50       	subi	r24, 0x01	; 1
    7e4a:	a9 f7       	brne	.-22     	; 0x7e36 <main+0x36>
    7e4c:	99 24       	eor	r9, r9
    7e4e:	93 94       	inc	r9
    7e50:	a5 e0       	ldi	r26, 0x05	; 5
    7e52:	aa 2e       	mov	r10, r26
    7e54:	f1 e1       	ldi	r31, 0x11	; 17
    7e56:	bf 2e       	mov	r11, r31
    7e58:	a0 d0       	rcall	.+320    	; 0x7f9a <getch>
    7e5a:	81 34       	cpi	r24, 0x41	; 65
    7e5c:	21 f4       	brne	.+8      	; 0x7e66 <main+0x66>
    7e5e:	81 e0       	ldi	r24, 0x01	; 1
    7e60:	b5 d0       	rcall	.+362    	; 0x7fcc <getNch>
    7e62:	83 e0       	ldi	r24, 0x03	; 3
    7e64:	1f c0       	rjmp	.+62     	; 0x7ea4 <main+0xa4>
    7e66:	82 34       	cpi	r24, 0x42	; 66
    7e68:	11 f4       	brne	.+4      	; 0x7e6e <main+0x6e>
    7e6a:	84 e1       	ldi	r24, 0x14	; 20
    7e6c:	03 c0       	rjmp	.+6      	; 0x7e74 <main+0x74>
    7e6e:	85 34       	cpi	r24, 0x45	; 69
    7e70:	19 f4       	brne	.+6      	; 0x7e78 <main+0x78>
    7e72:	85 e0       	ldi	r24, 0x05	; 5
    7e74:	ab d0       	rcall	.+342    	; 0x7fcc <getNch>
    7e76:	86 c0       	rjmp	.+268    	; 0x7f84 <main+0x184>
    7e78:	85 35       	cpi	r24, 0x55	; 85
    7e7a:	79 f4       	brne	.+30     	; 0x7e9a <main+0x9a>
    7e7c:	8e d0       	rcall	.+284    	; 0x7f9a <getch>
    7e7e:	e8 2e       	mov	r14, r24
    7e80:	ff 24       	eor	r15, r15
    7e82:	8b d0       	rcall	.+278    	; 0x7f9a <getch>
    7e84:	08 2f       	mov	r16, r24
    7e86:	10 e0       	ldi	r17, 0x00	; 0
    7e88:	10 2f       	mov	r17, r16
    7e8a:	00 27       	eor	r16, r16
    7e8c:	0e 29       	or	r16, r14
    7e8e:	1f 29       	or	r17, r15
    7e90:	00 0f       	add	r16, r16
    7e92:	11 1f       	adc	r17, r17
    7e94:	95 d0       	rcall	.+298    	; 0x7fc0 <verifySpace>
    7e96:	68 01       	movw	r12, r16
    7e98:	75 c0       	rjmp	.+234    	; 0x7f84 <main+0x184>
    7e9a:	86 35       	cpi	r24, 0x56	; 86
    7e9c:	29 f4       	brne	.+10     	; 0x7ea8 <main+0xa8>
    7e9e:	84 e0       	ldi	r24, 0x04	; 4
    7ea0:	95 d0       	rcall	.+298    	; 0x7fcc <getNch>
    7ea2:	80 e0       	ldi	r24, 0x00	; 0
    7ea4:	72 d0       	rcall	.+228    	; 0x7f8a <putch>
    7ea6:	6e c0       	rjmp	.+220    	; 0x7f84 <main+0x184>
    7ea8:	84 36       	cpi	r24, 0x64	; 100
    7eaa:	09 f0       	breq	.+2      	; 0x7eae <main+0xae>
    7eac:	45 c0       	rjmp	.+138    	; 0x7f38 <main+0x138>
    7eae:	75 d0       	rcall	.+234    	; 0x7f9a <getch>
    7eb0:	74 d0       	rcall	.+232    	; 0x7f9a <getch>
    7eb2:	08 2f       	mov	r16, r24
    7eb4:	72 d0       	rcall	.+228    	; 0x7f9a <getch>
    7eb6:	80 e0       	ldi	r24, 0x00	; 0
    7eb8:	c8 16       	cp	r12, r24
    7eba:	80 e7       	ldi	r24, 0x70	; 112
    7ebc:	d8 06       	cpc	r13, r24
    7ebe:	20 f4       	brcc	.+8      	; 0x7ec8 <main+0xc8>
    7ec0:	83 e0       	ldi	r24, 0x03	; 3
    7ec2:	f6 01       	movw	r30, r12
    7ec4:	87 bf       	out	0x37, r24	; 55
    7ec6:	e8 95       	spm
    7ec8:	c0 e0       	ldi	r28, 0x00	; 0
    7eca:	d1 e0       	ldi	r29, 0x01	; 1
    7ecc:	66 d0       	rcall	.+204    	; 0x7f9a <getch>
    7ece:	89 93       	st	Y+, r24
    7ed0:	0c 17       	cp	r16, r28
    7ed2:	e1 f7       	brne	.-8      	; 0x7ecc <main+0xcc>
    7ed4:	f0 e0       	ldi	r31, 0x00	; 0
    7ed6:	cf 16       	cp	r12, r31
    7ed8:	f0 e7       	ldi	r31, 0x70	; 112
    7eda:	df 06       	cpc	r13, r31
    7edc:	20 f0       	brcs	.+8      	; 0x7ee6 <main+0xe6>
    7ede:	83 e0       	ldi	r24, 0x03	; 3
    7ee0:	f6 01       	movw	r30, r12
    7ee2:	87 bf       	out	0x37, r24	; 55
    7ee4:	e8 95       	spm
    7ee6:	6c d0       	rcall	.+216    	; 0x7fc0 <verifySpace>
    7ee8:	07 b6       	in	r0, 0x37	; 55
    7eea:	00 fc       	sbrc	r0, 0
    7eec:	fd cf       	rjmp	.-6      	; 0x7ee8 <main+0xe8>
    7eee:	a6 01       	movw	r20, r12
    7ef0:	a0 e0       	ldi	r26, 0x00	; 0
    7ef2:	b1 e0       	ldi	r27, 0x01	; 1
    7ef4:	2c 91       	ld	r18, X
    7ef6:	30 e0       	ldi	r19, 0x00	; 0
    7ef8:	11 96       	adiw	r26, 0x01	; 1
    7efa:	8c 91       	ld	r24, X
    7efc:	11 97       	sbiw	r26, 0x01	; 1
    7efe:	90 e0       	ldi	r25, 0x00	; 0
    7f00:	98 2f       	mov	r25, r24
    7f02:	88 27       	eor	r24, r24
    7f04:	82 2b       	or	r24, r18
    7f06:	93 2b       	or	r25, r19
    7f08:	12 96       	adiw	r26, 0x02	; 2
    7f0a:	fa 01       	movw	r30, r20
    7f0c:	0c 01       	movw	r0, r24
    7f0e:	90 92 57 00 	sts	0x0057, r9
    7f12:	e8 95       	spm
    7f14:	11 24       	eor	r1, r1
    7f16:	4e 5f       	subi	r20, 0xFE	; 254
    7f18:	5f 4f       	sbci	r21, 0xFF	; 255
    7f1a:	f1 e0       	ldi	r31, 0x01	; 1
    7f1c:	a0 38       	cpi	r26, 0x80	; 128
    7f1e:	bf 07       	cpc	r27, r31
    7f20:	49 f7       	brne	.-46     	; 0x7ef4 <main+0xf4>
    7f22:	f6 01       	movw	r30, r12
    7f24:	a0 92 57 00 	sts	0x0057, r10
    7f28:	e8 95       	spm
    7f2a:	07 b6       	in	r0, 0x37	; 55
    7f2c:	00 fc       	sbrc	r0, 0
    7f2e:	fd cf       	rjmp	.-6      	; 0x7f2a <main+0x12a>
    7f30:	b0 92 57 00 	sts	0x0057, r11
    7f34:	e8 95       	spm
    7f36:	26 c0       	rjmp	.+76     	; 0x7f84 <main+0x184>
    7f38:	84 37       	cpi	r24, 0x74	; 116
    7f3a:	b1 f4       	brne	.+44     	; 0x7f68 <main+0x168>
    7f3c:	2e d0       	rcall	.+92     	; 0x7f9a <getch>
    7f3e:	2d d0       	rcall	.+90     	; 0x7f9a <getch>
    7f40:	f8 2e       	mov	r15, r24
    7f42:	2b d0       	rcall	.+86     	; 0x7f9a <getch>
    7f44:	3d d0       	rcall	.+122    	; 0x7fc0 <verifySpace>
    7f46:	f6 01       	movw	r30, r12
    7f48:	ef 2c       	mov	r14, r15
    7f4a:	8f 01       	movw	r16, r30
    7f4c:	0f 5f       	subi	r16, 0xFF	; 255
    7f4e:	1f 4f       	sbci	r17, 0xFF	; 255
    7f50:	84 91       	lpm	r24, Z+
    7f52:	1b d0       	rcall	.+54     	; 0x7f8a <putch>
    7f54:	ea 94       	dec	r14
    7f56:	f8 01       	movw	r30, r16
    7f58:	c1 f7       	brne	.-16     	; 0x7f4a <main+0x14a>
    7f5a:	08 94       	sec
    7f5c:	c1 1c       	adc	r12, r1
    7f5e:	d1 1c       	adc	r13, r1
    7f60:	fa 94       	dec	r15
    7f62:	cf 0c       	add	r12, r15
    7f64:	d1 1c       	adc	r13, r1
    7f66:	0e c0       	rjmp	.+28     	; 0x7f84 <main+0x184>
    7f68:	85 37       	cpi	r24, 0x75	; 117
    7f6a:	39 f4       	brne	.+14     	; 0x7f7a <main+0x17a>
    7f6c:	29 d0       	rcall	.+82     	; 0x7fc0 <verifySpace>
    7f6e:	8e e1       	ldi	r24, 0x1E	; 30
    7f70:	0c d0       	rcall	.+24     	; 0x7f8a <putch>
    7f72:	85 e9       	ldi	r24, 0x95	; 149
    7f74:	0a d0       	rcall	.+20     	; 0x7f8a <putch>
    7f76:	8f e0       	ldi	r24, 0x0F	; 15
    7f78:	95 cf       	rjmp	.-214    	; 0x7ea4 <main+0xa4>
    7f7a:	81 35       	cpi	r24, 0x51	; 81
    7f7c:	11 f4       	brne	.+4      	; 0x7f82 <main+0x182>
    7f7e:	88 e0       	ldi	r24, 0x08	; 8
    7f80:	14 d0       	rcall	.+40     	; 0x7faa <watchdogConfig>
    7f82:	1e d0       	rcall	.+60     	; 0x7fc0 <verifySpace>
    7f84:	80 e1       	ldi	r24, 0x10	; 16
    7f86:	01 d0       	rcall	.+2      	; 0x7f8a <putch>
    7f88:	67 cf       	rjmp	.-306    	; 0x7e58 <main+0x58>

00007f8a <putch>:
    }
    putch(STK_OK);
  }
}

void putch(char ch) {
    7f8a:	98 2f       	mov	r25, r24
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    7f8c:	80 91 c0 00 	lds	r24, 0x00C0
    7f90:	85 ff       	sbrs	r24, 5
    7f92:	fc cf       	rjmp	.-8      	; 0x7f8c <putch+0x2>
  UDR0 = ch;
    7f94:	90 93 c6 00 	sts	0x00C6, r25
      [uartBit] "I" (UART_TX_BIT)
    :
      "r25"
  );
#endif
}
    7f98:	08 95       	ret

00007f9a <getch>:
//  return getch();
//}

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    7f9a:	a8 95       	wdr
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)));
    7f9c:	80 91 c0 00 	lds	r24, 0x00C0
    7fa0:	87 ff       	sbrs	r24, 7
    7fa2:	fc cf       	rjmp	.-8      	; 0x7f9c <getch+0x2>
  ch = UDR0;
    7fa4:	80 91 c6 00 	lds	r24, 0x00C6
#ifdef LED_DATA_FLASH
  LED_PIN |= _BV(LED);
#endif

  return ch;
}
    7fa8:	08 95       	ret

00007faa <watchdogConfig>:
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    7faa:	e0 e6       	ldi	r30, 0x60	; 96
    7fac:	f0 e0       	ldi	r31, 0x00	; 0
    7fae:	98 e1       	ldi	r25, 0x18	; 24
    7fb0:	90 83       	st	Z, r25
  WDTCSR = x;
    7fb2:	80 83       	st	Z, r24
}
    7fb4:	08 95       	ret

00007fb6 <appStart>:

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
    7fb6:	80 e0       	ldi	r24, 0x00	; 0
    7fb8:	f8 df       	rcall	.-16     	; 0x7faa <watchdogConfig>
  __asm__ __volatile__ (
    7fba:	ee 27       	eor	r30, r30
    7fbc:	ff 27       	eor	r31, r31
    7fbe:	09 94       	ijmp

00007fc0 <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) appStart();
    7fc0:	ec df       	rcall	.-40     	; 0x7f9a <getch>
    7fc2:	80 32       	cpi	r24, 0x20	; 32
    7fc4:	09 f0       	breq	.+2      	; 0x7fc8 <verifySpace+0x8>
    7fc6:	f7 df       	rcall	.-18     	; 0x7fb6 <appStart>
  putch(STK_INSYNC);
    7fc8:	84 e1       	ldi	r24, 0x14	; 20
    7fca:	df cf       	rjmp	.-66     	; 0x7f8a <putch>

00007fcc <getNch>:
    ::[count] "M" (UART_B_VALUE)
  );
}
#endif

void getNch(uint8_t count) {
    7fcc:	1f 93       	push	r17
    7fce:	18 2f       	mov	r17, r24
  do getch(); while (--count);
    7fd0:	e4 df       	rcall	.-56     	; 0x7f9a <getch>
    7fd2:	11 50       	subi	r17, 0x01	; 1
    7fd4:	e9 f7       	brne	.-6      	; 0x7fd0 <getNch+0x4>
  verifySpace();
    7fd6:	f4 df       	rcall	.-24     	; 0x7fc0 <verifySpace>
}
    7fd8:	1f 91       	pop	r17
    7fda:	08 95       	ret
